{
  "_args": [
    [
      {
        "raw": "then-read-stream@^1.5.0",
        "scope": null,
        "escapedName": "then-read-stream",
        "name": "then-read-stream",
        "rawSpec": "^1.5.0",
        "spec": ">=1.5.0 <2.0.0",
        "type": "range"
      },
      "F:\\hard\\sem 6\\software enginerring\\project\\music_app\\node_modules\\strtok3"
    ]
  ],
  "_from": "then-read-stream@^1.5.0",
  "_hasShrinkwrap": false,
  "_id": "then-read-stream@1.5.0",
  "_location": "/then-read-stream",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/then-read-stream_1.5.0_1544962721031_0.015590898907238415"
  },
  "_npmUser": {
    "name": "borewit",
    "email": "borewit@xs4all.nl"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "then-read-stream@^1.5.0",
    "scope": null,
    "escapedName": "then-read-stream",
    "name": "then-read-stream",
    "rawSpec": "^1.5.0",
    "spec": ">=1.5.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/strtok3"
  ],
  "_resolved": "https://registry.npmjs.org/then-read-stream/-/then-read-stream-1.5.0.tgz",
  "_shasum": "1077809ac135f11fc54fb7ae01631dff8b598082",
  "_shrinkwrap": null,
  "_spec": "then-read-stream@^1.5.0",
  "_where": "F:\\hard\\sem 6\\software enginerring\\project\\music_app\\node_modules\\strtok3",
  "author": {
    "name": "Borewit",
    "url": "https://github.com/Borewit"
  },
  "bugs": {
    "url": "https://github.com/Borewit/then-read-stream/issues"
  },
  "dependencies": {},
  "description": "Read from a readable stream just like a file",
  "devDependencies": {
    "@types/mocha": "^5.2.5",
    "@types/node": "^10.12.10",
    "chai": "^4.2.0",
    "coveralls": "^3.0.2",
    "del-cli": "^1.1.0",
    "mocha": "^5.2.0",
    "nyc": "^13.1.0",
    "remark-cli": "^6.0.1",
    "remark-preset-lint-recommended": "^3.0.2",
    "ts-node": "^7.0.1",
    "tslint": "^5.11.0",
    "typescript": "^3.2.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Qu+Dp3G28GBmewssIjoRwcmdnsymjdSFt17s8qAajQKesBjLoRAj3VgWftiLSC5CJV6PEYOS0d45WGTJp8QFxQ==",
    "shasum": "1077809ac135f11fc54fb7ae01631dff8b598082",
    "tarball": "https://registry.npmjs.org/then-read-stream/-/then-read-stream-1.5.0.tgz",
    "fileCount": 8,
    "unpackedSize": 132628,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcFkKhCRA9TVsSAnZWagAAkH4P/02he8Mt0wbwH1AzYfKJ\npM4OhSJdH8gsXU0Wjt8kllQgQmP0G9T5YUUHicXYlbKKAt4tgqaKo7huH4U0\ne9aJPNFQ6BZWTQz+ggxkZq62u5qO9cHdjdGrPLZt85kT87ku0qPXJONRvxS4\nX52WYQXe2i8/Qm4M8RVXjXk1teboK1o1pXpzRt6O/XdOJ6mdaW7S/wFZpGPg\nr6g/xaBAOvu9/zJVcQQeOIlM4jd/ULfBP1dVOR2LSFGHZTornGpajRtIj/ni\n5j/jJ3rMms7kfz1HQxyYpIUDrIl6KF+CwmM6ivTJvlG9sP0XcYDLKg9a+zHi\nxKl1NMV3dSljHPXDAQU1sMm0TKhXUXo3voRXKSNeLLmbMbfzPLQ1cyY9kigB\nKQlUzhRLMkhJyThGUIdqfptwU79lL11eu7Xzc+u1BsyTZ68Ilolm7vuh+Zd0\nM045nyFB1cQNoElHyEgL23slGsQMHqSa1XNPD+FmrBHJU+k07EHHvgMruLGc\n4KfeQGntpG0nmq7jEHv95dBNbwTIMPaqyQ952QdksgkJWVRQru+CBeT3qfNs\nPTEdfxhPMC8G3E6NbG8B2hL2+molcEPIy9ZnCJam2Zu0clrHBTFAMZzmuS4e\n855bzL1dCOQkT6hn/RDpTE/j/LHYHtoGCnztIfjosjAA9XnVk/T/EnVNVtaL\nCd2a\r\n=JW4J\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=0.1.98"
  },
  "gitHead": "588566f749195ec89aab1afda13aacc6976996c2",
  "homepage": "https://github.com/Borewit/then-read-stream#readme",
  "keywords": [
    "readable",
    "buffer",
    "stream",
    "read"
  ],
  "license": "MIT",
  "main": "./lib/index",
  "maintainers": [
    {
      "name": "borewit",
      "email": "borewit@xs4all.nl"
    }
  ],
  "name": "then-read-stream",
  "nyc": {
    "check-coverage": true,
    "include": [
      "src/**/*"
    ],
    "reporter": [
      "lcov",
      "text"
    ],
    "report-dir": "coverage"
  },
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/Borewit/then-read-stream.svg?branch=master)](https://travis-ci.org/Borewit/then-read-stream)\n[![NPM version](https://badge.fury.io/js/then-read-stream.svg)](https://npmjs.org/package/then-read-stream)\n[![npm downloads](http://img.shields.io/npm/dm/then-read-stream.svg)](https://npmjs.org/package/then-read-stream)\n[![Dependencies](https://david-dm.org/Borewit/then-read-stream.svg)](https://david-dm.org/Borewit/then-read-stream)\n[![Coverage Status](https://coveralls.io/repos/github/Borewit/then-read-stream/badge.svg?branch=master)](https://coveralls.io/github/Borewit/then-read-stream?branch=master)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/8a89b90858734a6da07570eaf2e89849)](https://www.codacy.com/app/Borewit/then-read-stream?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Borewit/then-read-stream&amp;utm_campaign=Badge_Grade)\n[![Known Vulnerabilities](https://snyk.io/test/github/Borewit/then-read-stream/badge.svg?targetFile=package.json)](https://snyk.io/test/github/Borewit/then-read-stream?targetFile=package.json)\n\n# then-read-stream\n\nA promise based asynchronous stream reader, which makes reading from a stream easy.\n\nAllows to read from a [Readable Stream](https://nodejs.org/api/stream.html#stream_readable_streams) \nsimilar as you would read from a file.\n\n## Usage\n\nThe `then-read-stream` contains one class: `StreamReader`, which reads from a [stream.Readable](https://nodejs.org/api/stream.html#stream_class_stream_readable).\n\n### Compatibility\n\nNPM module is compliant with [ECMAScript 2015 (ES6)](https://www.ecma-international.org/ecma-262/6.0/).\n\n#### Examples\n\nIn the following example we read the first 16 bytes from a stream and store them in our buffer.\nSource code of examples can be found [here](test/examples.ts).\n\n```JavaScript\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { StreamReader } from 'then-read-stream';\n\nconst readable = fs.createReadStream('JPEG_example_JPG_RIP_001.jpg');\nconst streamReader = new StreamReader(readable);\n\nconst buffer = Buffer.alloc(16);\n\nreturn streamReader.read(buffer, 0, 16)\n  .then( bytesRead => {\n    // buf, contains bytesRead, which will be 16 if the end-of-stream has not been reached\n  });\n```\n\nWith peek you can read ahead:\n```JavaScript\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { StreamReader } from 'then-read-stream';\n\nconst fileReadStream = fs.createReadStream('JPEG_example_JPG_RIP_001.jpg');\nconst streamReader = new StreamReader(fileReadStream);\nconst buffer = Buffer.alloc(20);\n\nreturn streamReader.peek(buffer, 0, 3)\n  .then(bytesRead => {\n    if (bytesRead === 3 && buffer[0] === 0xFF && buffer[1] === 0xD8 && buffer[2] === 0xFF) {\n      console.log('This is a JPEG file');\n      return streamReader.read(buffer, 0, 20); // Read JPEG header\n    } else {\n      throw Error('Expected a JPEG file');\n    }\n  })\n  .then(bytesRead => {\n    if (bytesRead === 20) {\n      console.log('Got the JPEG header');\n    } else {\n      throw Error('Failed to read JPEG header');\n    }\n  });\n```\n\nIf you have to skip a part of the data, you can use ignore:\n```JavaScript\nreturn streamReader.ignore(16)\n  .then( bytesIgnored => {\n    if (bytesIgnored < 16){\n      console.log(`Remaining stream length was ${bytesIgnored}, expected 16`);\n    }\n  });\n```\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Borewit/then-read-stream.git"
  },
  "scripts": {
    "build": "npm run clean && npm run compile",
    "clean": "del-cli lib/** src/**/*.js src/**/*.js.map src/**/*.d.ts test/**/*.js test/**/*.js.map coverage .nyc_output",
    "compile": "npm run compile-src && yarn run compile-test",
    "compile-src": "tsc -p src",
    "compile-test": "tsc -p test",
    "lint": "npm run lint-md && npm run lint-ts",
    "lint-md": "remark -u preset-lint-recommended .",
    "lint-ts": "tslint 'src/**/*.ts' --exclude 'src/**/*.d.ts' 'test/**/*.ts' --exclude 'test/**/*.d.ts'",
    "send-coveralls": "nyc report --reporter=text-lcov | coveralls",
    "start": "npm run compile && npm run lint && npm run cover-test",
    "test": "mocha --require ts-node/register test",
    "test-coverage": "nyc npm run test"
  },
  "typings": "lib/index",
  "version": "1.5.0"
}
